
block.setSize(151, 51)

generic = {
  name = 'Segment Display 4x7 Bricklet',
  parameter = {
    uid = 'aaa'
  },

  init = function(self)
    block.setInputsPinCount(1)
    block.setInputPinTypeRestrains(1, 'number')
    block.modifyFlags('SupressStopFunctionCall', true)
    block.modifyFlags('Realtime', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Bricklet', self.name)
    gui.add('Edit', 'EditUID', 'Bricklet UID')
    gui.add('Button', 'ButtonUID', "Select UID")
    gui.set('EditUID', 'Text', self.parameter.uid)
    gui.setEventHandler(
      self,
      'ButtonUID',
      {
        Click = function(self)
          local uid = require('tinkerForge').selectDialog(self.name)
          if uid then
            gui.set('EditUID', 'Text', uid)
            self.parameter.uid = uid
          end
        end,
      }
    )
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.uid = gui.get('EditUID', 'Text')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x00, "'" .. self.parameter.uid .. "'", "", "0.0, 0.66, 0.91")
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
          block.bricklet = assert(require('tinkerForge').new('NAME', 'UID', 2, 0, 2))
          block.vToD = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}
        end

        block.step = function(a)
          a = math.floor(a)
          local d = {
            block.vToD[a // 1000 % 10 + 1],
            block.vToD[a // 100 % 10 + 1],
            block.vToD[a // 10 % 10 + 1],
            block.vToD[a % 10 + 1]
          }
          block.bricklet:io(1, "u1u1u1u1u1b1", d[1], d[2], d[3], d[4], 7, false)
        end

        return block
      ]==]
    local replaces = {
      ['NAME'] = self.name,
      ['UID'] = self.parameter.uid
    }
    return string.gsub(source, '%a+', replaces)
  end,

}


