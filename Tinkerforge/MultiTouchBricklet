-- 23.11.2017 16:33:19 AR V1.0a

block.setSize(151, 51)

generic = {
  name = 'Multi Touch Bricklet',
  parameter = {
    uid = 'aaa'
  },

  init = function(self)
    block.setInputsPinCount(0)
    block.setOutputsPinCount(12)
    for i = 1, 12 do
      block.setOutputPinName(i, i)
      block.setOutputPinTypeRestrains(i, 'boolean')
    end
    block.modifyFlags('SupressStopFunctionCall', true)
    block.modifyFlags('Realtime', true)
  end,

  open = function(self)
    gui.add('Info', 'Info', 'Bricklet', self.name)
    gui.add('Edit', 'EditUID', 'Bricklet UID')
    gui.add('Button', 'ButtonUID', "Select UID")
    gui.set('EditUID', 'Text', self.parameter.uid)
    gui.setEventHandler(
      self,
      'ButtonUID',
      {
        Click = function(self)
          local uid = require('tinkerForge').selectDialog(self.name)
          if uid then
            gui.set('EditUID', 'Text', uid)
            self.parameter.uid = uid
          end
        end,
      }
    )
    gui.setSize()
  end,

  apply = function(self)
    self.parameter.uid = gui.get('EditUID', 'Text')
  end,

  close = function()
  end,

  avatar = function(self)
    return block.getDefaultAvatar(0x00, "'" .. self.parameter.uid .. "'", "", "0.0, 0.66, 0.91")
  end,

  generate = function(self)
    local source =
      [==[
        local block = {}

        block.start = function()
          block.bricklet = assert(require('tinkerForge').new('NAME', 'UID', 2, 0, 1))
        end

        block.step = function()
          local q = block.bricklet:io(1, false, "d2")
          return
            q & 1 ~= 0, q & 2 ~= 0, q & 1 ~= 4, q & 1 ~= 8,
            q & 16 ~= 0, q & 32 ~= 0, q & 64 ~= 0, q & 128 ~= 0,
            q & 256 ~= 0, q & 512 ~= 0, q & 1024 ~= 0, q & 2048 ~= 0
        end

        return block
      ]==]
    local replaces = {
      ['NAME'] = self.name,
      ['UID'] = self.parameter.uid
    }
    return string.gsub(source, '%a+', replaces)
  end,

}

